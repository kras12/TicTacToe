<Window x:Class="TicTacToe.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TicTacToe"
        xmlns:enums="clr-namespace:TicTacToe.Game.Enums;assembly=TicTacToe.Game"
        xmlns:converters="clr-namespace:TicTacToe.Converters"
        xmlns:viewmodels="clr-namespace:TicTacToe.ViewModels"
        mc:Ignorable="d"
        Title="Tic Tac Toe" Height="450" Width="800" MinWidth="380" MinHeight="460" SizeChanged="Window_SizeChanged"
        d:DataContext="{d:DesignInstance Type=viewmodels:MainWindowViewModel, IsDesignTimeCreatable=True}">
    <Window.Resources>
        <!-- Enums -->
        <enums:PlayerType x:Key="HumanPlayerType">Human</enums:PlayerType>
        <enums:PlayerType x:Key="ComputerPlayerType">Computer</enums:PlayerType>

        <!-- Brushes -->
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="DarkGray"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>

        <!-- Converters -->
        <converters:EnumToVisibilityConverter x:Key="EnumToVisibilityConverter" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:InverseBooleanToVisibilityCollapsedConverter x:Key="InverseBooleanToVisibilityCollapsedConverter"/>
        <converters:InverseBooleanToVisibilityHiddenConverter x:Key="InverseBooleanToVisibilityHiddenConverter"/>
        <converters:HeightToFontSizeConverter x:Key="HeightToFontSizeConverter"/>

        <!-- Styles -->
        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="AntiqueWhite" />
        </Style>
        <Style TargetType="Label">
            <Setter Property="Foreground" Value="AntiqueWhite" />
        </Style>
        <Style TargetType="Button" x:Key="GameBoardCellStyle">
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="1000"/>
                </Style>
            </Style.Resources>
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="BorderBrush" Value="#CC9C9C9C"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background">
                <Setter.Value>
                    <RadialGradientBrush>
                        <GradientStop Color="#FFA2B7D2" Offset="0.0" />
                        <GradientStop Color="#FF7B8BA0" Offset="0.2" />
                        <GradientStop Color="#FF5F6C7C" Offset="0.4" />
                        <GradientStop Color="#FF4D5A6A" Offset="0.6" />
                        <GradientStop Color="#FF3B4858" Offset="0.8" />
                        <GradientStop Color="#FF3B4858" Offset="0.98" />
                        <GradientStop Color="AntiqueWhite" Offset="1.0" />
                    </RadialGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                            <Grid>
                                <TextBlock x:Name="MarkTextBlock" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                    FontSize="60" Foreground="White" Opacity="0.3"/>
                                <TextBlock x:Name="ContentTextBlock" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                    Text="{TemplateBinding Content}" Foreground="White" FontWeight="Bold" Padding="5"
                                    FontSize="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Button}, Converter={StaticResource HeightToFontSizeConverter}, ConverterParameter=0.15}"/>
                                <Border x:Name="HoverOverlay" Background="Transparent" Visibility="Collapsed" Opacity="0.3" />
                                <Border x:Name="PlayerOverlay" Visibility="Collapsed" Opacity="0.3" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="HoverOverlay" Property="Visibility" Value="Visible" />
                                <Setter TargetName="HoverOverlay" Property="Background" Value="AliceBlue">
                                </Setter>
                            </Trigger>
                            <DataTrigger Binding="{Binding IsChecked}" Value="True">
                                <Setter Property="Content" Value="{Binding CheckedByPlayer.Name}" />                                
                                <Setter TargetName="ContentTextBlock" Property="Background" Value="#99000000" />
                                <Setter TargetName="PlayerOverlay" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding CheckedByPlayer.PlayerType}" Value="{StaticResource HumanPlayerType}">
                                <Setter TargetName="PlayerOverlay" Property="Background" Value="Green" />
                                <Setter TargetName="MarkTextBlock" Property="Text" Value="X"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding CheckedByPlayer.PlayerType}" Value="{StaticResource ComputerPlayerType}">
                                <Setter TargetName="PlayerOverlay" Property="Background" Value="Red" />
                                <Setter TargetName="MarkTextBlock" Property="Text" Value="O"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="GameControlButton">
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="5"/>
                </Style>
            </Style.Resources>
            <Setter Property="Padding" Value="10,5,10,5"/>
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" 
                                CornerRadius="5" Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource Button.MouseOver.Background}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="ComboBox" x:Key="ComboBoxStyle">
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock Text="{Binding}" Foreground="Black"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    
    <!--Primary Grid-->
    <Grid x:Name="MainGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        
        <!--Top panel-->
        <Grid x:Name="TopPanel">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>            
            <Grid.Background>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                    <GradientStop Color="#FF3B4858" Offset="0.0" />
                    <GradientStop Color="#FF4D5A6A" Offset="0.25" />
                    <GradientStop Color="#FF5F6C7C" Offset="0.5" />
                    <GradientStop Color="#FF4D5A6A" Offset="0.75" />
                    <GradientStop Color="#FF3B4858" Offset="1.0" />
                </LinearGradientBrush>
            </Grid.Background>
            
             <!-- Game actions -->
            <StackPanel Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                <StackPanel Orientation="Vertical" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,10,0,15" Visibility="{Binding IsGameActive, Converter={StaticResource InverseBooleanToVisibilityHiddenConverter}}">
                    <Label Content="Difficulty:" Foreground="AntiqueWhite"/>
                    <ComboBox HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,0,0,0" Width="90" Foreground="Black" Style="{StaticResource ComboBoxStyle}" 
                              ItemsSource="{Binding Difficulties}" SelectedValue="{Binding SelectedDifficulty, Mode=TwoWay}"/>
                    <Button Margin="0,10,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                        Style="{StaticResource GameControlButton}" Content="New Game" Command="{Binding NewGameCommand}"/>
                </StackPanel>
            </StackPanel>

            <!-- Status messages -->
            <StackPanel Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Vertical">
                <TextBlock Text="{Binding StatusMessage}" FontSize="30"/>
            </StackPanel>

            <!-- Statistics -->
            <StackPanel Grid.Column="2" Grid.Row="0" Orientation="Vertical" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,10,10,10">
                <TextBlock Text="{Binding CurrentDifficulty, StringFormat=Difficulty: {0}}"/>
                <TextBlock TextAlignment="Right" Text="{Binding GameStatistics.Wins, StringFormat=Wins: {0}}"></TextBlock>
                <TextBlock TextAlignment="Right" Text="{Binding GameStatistics.Losses, StringFormat=Losses: {0}}"></TextBlock>
                <TextBlock TextAlignment="Right" Text="{Binding GameStatistics.Ties, StringFormat=Ties: {0}}"></TextBlock>
            </StackPanel>
        </Grid>

        <!--Game Board-->
        <Border x:Name="BoardBorder" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                BorderBrush="AntiqueWhite" BorderThickness="2" Background="Black" Padding="5">
            <Grid x:Name="BoardGrid" IsEnabled="{Binding IsHumanPlayerTurn}" Visibility="{Binding HasStartedGames, Converter={StaticResource BooleanToVisibilityConverter}}">
                <ItemsControl ItemsSource="{Binding BoardCells}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <UniformGrid Rows="{Binding RowCount}" Columns="{Binding ColumnCount}" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Button Style="{StaticResource GameBoardCellStyle}" Margin="5" Command="{Binding DataContext.CellClickCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}" CommandParameter="{Binding}" />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Grid>
        </Border>        
    </Grid>
</Window>
